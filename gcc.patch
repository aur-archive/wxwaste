--- util.cpp.orig	2005-03-09 15:28:16.000000000 -0500
+++ util.cpp	2012-10-04 15:14:00.800171262 -0400
@@ -425,7 +425,8 @@
 	else if (*t == 'D') i->allow=0;
 	else return 0;
 	t++;
-	char *p=strstr(t,"/");
+	std::string pstring=strstr(t,"/");
+    char *p=&pstring[0];
 	if (!p || !p[1]) return 0;
 	i->maskbits=(char)(atoi(++p)&0xff);
 	if (*p < '0' || *p > '9') return 0;
@@ -1232,7 +1233,7 @@
 const char* sevString(dSeverity sev)
 {
 	static const char dummy[]="unknown!";
-	if ((sev >= 1) && (sev <= (int) sizeof(dSevStArr))) {
+	if ((sev >= 1) && (sev <= (long) sizeof(dSevStArr))) {
 		return dSevStArr[sev-1];
 	}
 	else {
@@ -1255,7 +1256,7 @@
 		va_start(list,text);
 
 		strc=str;strc[0]=0;
-		sprintf(strc,"(%i)",(int)sev);strc+=strlen(strc);
+		sprintf(strc,"(%i)",(long)sev);strc+=strlen(strc);
 		strcpy(strc,sevString(sev));strc+=strlen(strc);
 		strcpy(strc,":");strc+=1;
 		if (tm) sprintf(strc,"<%02d/%02d/%02d %02d:%02d:%02d:%d> ",tm->tm_year%100, tm->tm_mon+1, tm->tm_mday, tm->tm_hour, tm->tm_min, tm->tm_sec, logidx++);
--- wxbrowser.cpp.orig	2005-03-09 15:28:16.000000000 -0500
+++ wxbrowser.cpp	2012-10-04 15:36:56.481166728 -0400
@@ -23,6 +23,7 @@
 
 // For compilers that support precompilation, includes "wx/wx.h".
 #include "wx/wxprec.h"
+#include <wx/imaglist.h>
 
 #ifdef __BORLANDC__
 #pragma hdrstop
--- sharedmain.cpp.orig	2012-10-04 15:54:30.397319744 -0400
+++ sharedmain.cpp	2012-10-04 15:55:31.638269921 -0400
@@ -703,7 +703,7 @@
 								char *p=g_uploads.Get(a);
 								if (p) {
 									int lvidx;
-									while ((lvidx=g_lvsend.FindItemByParam((int)p)) >= 0) {
+									while ((lvidx=g_lvsend.FindItemByParam((long)p)) >= 0) {
 										g_lvsend.DeleteItem(lvidx);
 									};
 									free(p);
@@ -723,7 +723,7 @@
 					int idx=r->get_idx();
 					if (idx >= UPLOAD_BASE_IDX) {
 						idx-=UPLOAD_BASE_IDX;
-						int lvidx=g_lvsend.FindItemByParam((int)g_uploads.Get(idx));
+						int lvidx=g_lvsend.FindItemByParam((long)g_uploads.Get(idx));
 						if (lvidx >= 0) {
 							g_lvsend.SetItemParam(lvidx,0);
 							g_lvsend.SetItemText(lvidx,3,"File already uploaded.");
@@ -762,7 +762,7 @@
 #if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 
 									int lvidx;
-									if ((lvidx=g_lvsend.FindItemByParam((int)g_uploads.Get(idx))) >= 0) {
+									if ((lvidx=g_lvsend.FindItemByParam((long)g_uploads.Get(idx))) >= 0) {
 										g_lvsend.DeleteItem(lvidx);
 									};
 #endif
@@ -817,7 +817,7 @@
 								g_sends.Add(a);
 #if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 
-								g_lvsend.InsertItem(0,a->GetName(),(int)a);
+								g_lvsend.InsertItem(0,a->GetName(),(long)a);
 								char buf[32];
 								int fs_l,fs_h;
 								a->GetSize((unsigned int *)&fs_l,(unsigned int *)&fs_h);
--- mqueuelist.cpp.orig	2012-10-04 15:54:46.880908775 -0400
+++ mqueuelist.cpp	2012-10-04 15:55:35.631665232 -0400
@@ -209,7 +209,7 @@
 
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 				if (m_lv) {
-					int i=m_lv->FindItemByParam((int)cm->get_con());
+					int i=m_lv->FindItemByParam((long)cm->get_con());
 					if (i != -1) {
 						char text[512];
 						m_lv->GetText(i,1,text,sizeof(text));
--- xfers.cpp.orig	2012-10-04 15:54:54.571028078 -0400
+++ xfers.cpp	2012-10-04 15:55:39.311722350 -0400
@@ -335,7 +335,7 @@
 
 		if (g_extrainf) sprintf(s+strlen(s)," %d/%d/%d (%d)",m_max_chunksent+1,m_chunks_sent_total,m_filelen_chunks,chunks_to_send_len);
 
-		int idx=g_lvsend.FindItemByParam((int)this);
+		int idx=g_lvsend.FindItemByParam((long)this);
 		if (idx!=-1) g_lvsend.SetItemText(idx,3,s);
 	}
 #endif
@@ -458,7 +458,7 @@
 	#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 		/* this section updates the 'Downloads' tab when the transfers start
 		*/
-		g_lvrecv.InsertItem(0,filename,(int)this);
+		g_lvrecv.InsertItem(0,filename,(long)this);
 		g_lvrecv.SetItemText(0,2,"Connecting");
 		g_lvrecv.SetItemText(0,1,sizestr);
 		g_lvrecv.SetItemText(0,3,guididx);
@@ -655,7 +655,7 @@
 		m_err="File already exists";
 
 		#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-			int idx=g_lvrecv.FindItemByParam((int)this);
+			int idx=g_lvrecv.FindItemByParam((long)this);
 			if (idx!=-1) {
 				g_lvrecv.SetItemText(idx,3,"");
 				// Holy god damned shit! Do we really refer runtime data in Listviews? omg!!!
@@ -711,8 +711,8 @@
 			ReadFile(m_hstatfile,&m_bytes_total_h,4,&d,NULL) && d == 4)
 	#else
 		if (m_statfile &&
-			(fread(&sig1,1,4,m_statfile)==4) && (sig1 == (int) WASTESTATE_SIG1) &&
-			(fread(&sig2,1,4,m_statfile)==4) && (sig2 == (int) WASTESTATE_SIG2) &&
+			(fread(&sig1,1,4,m_statfile)==4) && (sig1 == (long) WASTESTATE_SIG1) &&
+			(fread(&sig2,1,4,m_statfile)==4) && (sig2 == (long) WASTESTATE_SIG2) &&
 			(fread(&m_bytes_total_l,1,4,m_statfile)==4) &&
 			(fread(&m_bytes_total_h,1,4,m_statfile)==4))
 	#endif
@@ -761,7 +761,7 @@
 						{
 							safe_strncpy(m_nick,nick,sizeof(m_nick));
 							#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-								int idx=g_lvrecv.FindItemByParam((int)this);
+								int idx=g_lvrecv.FindItemByParam((long)this);
 								if (idx!=-1) {
 									g_lvrecv.SetItemText(idx,4,nick);
 								};
@@ -900,7 +900,7 @@
 		DeleteFile(m_statfile_fn);
 		DeleteFile(m_outfile_fn);
 
-		if (m_path_len < (int)strlen(m_outfile_fn)) { //cleanup any directories created
+		if (m_path_len < (long)strlen(m_outfile_fn)) { //cleanup any directories created
 			char *s=strdup(m_outfile_fn);
 			char *p=s+strlen(s);
 			for (;;) {
@@ -1116,7 +1116,7 @@
 		if (bNewUsername) {
 			safe_strncpy(m_nick,lasthdr->get_nick(),sizeof(m_nick));
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-				int idx=g_lvrecv.FindItemByParam((int)this);
+				int idx=g_lvrecv.FindItemByParam((long)this);
 				if (idx!=-1) {
 					char s[32];
 					FormatSizeStr64(s,fs_l,fs_h);
@@ -1318,7 +1318,7 @@
 						};
 						/* this section updates the 'Downloads' tab  after the download
 						has completed.. prints filename, status, and location. */
-						int idx=g_lvrecv.FindItemByParam((int)this);
+						int idx=g_lvrecv.FindItemByParam((long)this);
 						if (idx!=-1) {
 							g_lvrecv.SetItemText(idx,2,s);
 							g_lvrecv.SetItemText(idx,3,"");
@@ -1358,7 +1358,7 @@
 						m_chunk_cnt,m_total_chunks_recvd,m_chunk_total,m_adaptive_chunksize);
 					}
 
-					int idx=g_lvrecv.FindItemByParam((int)this);
+					int idx=g_lvrecv.FindItemByParam((long)this);
 					if (idx!=-1) g_lvrecv.SetItemText(idx,2,s);
 				#endif
 			};
--- xferwnd.cpp.orig	2012-10-04 15:55:01.857807800 -0400
+++ xferwnd.cpp	2012-10-04 15:55:43.011779777 -0400
@@ -188,8 +188,8 @@
                     continue;
                 }
 
-                if (hStatFile.Read(&sig1,4) == (size_t) 4 && sig1 == (int) WASTESTATE_SIG1 &&
-                    hStatFile.Read(&sig2,4) == (size_t) 4 && sig1 == (int) WASTESTATE_SIG2 &&
+                if (hStatFile.Read(&sig1,4) == (size_t) 4 && sig1 == (long) WASTESTATE_SIG1 &&
+                    hStatFile.Read(&sig2,4) == (size_t) 4 && sig1 == (long) WASTESTATE_SIG2 &&
                     hStatFile.Read(&fullsize_l,4) == (size_t) 4 &&
                     hStatFile.Read(&fullsize_h,4) == (size_t) 4)
                 {
@@ -525,7 +525,7 @@
 		int s=xs->run_hdr(g_mql);
 		if (s) {
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-				int idx=g_lvsend.FindItemByParam((int)xs);
+				int idx=g_lvsend.FindItemByParam((long)xs);
 				if (idx!=-1) {
 					if (!g_config->ReadInt(CONFIG_send_autoclear,CONFIG_send_autoclear_DEFAULT)) {
 						char *a=xs->GetError();
@@ -636,7 +636,7 @@
 		int s=xr->run(g_mql);
 		if (s) {
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-				int idx=g_lvrecv.FindItemByParam((int)xr);
+				int idx=g_lvrecv.FindItemByParam((long)xr);
 				if (idx!=-1) {
 					char text[128];
 					char *a=xr->GetError();
@@ -751,7 +751,7 @@
 			wxFile wxf(fname);
 			if (wxf.IsOpened()) {
 				int fs_h=0;
-				int fs_l=(int) wxf.Length();
+				int fs_l=(long) wxf.Length();
 				wxf.Close();
 				r.set_fsize(fs_l,fs_h);
 			}
@@ -760,7 +760,7 @@
 		HANDLE h=CreateFile(file,GENERIC_READ,FILE_SHARE_READ|FILE_SHARE_WRITE,NULL,OPEN_EXISTING,0,NULL);
 		if (h != INVALID_HANDLE_VALUE) {
 			int fs_h=0;
-			int fs_l=(int)GetFileSize(h,(LPDWORD)&fs_h);
+			int fs_l=(long)GetFileSize(h,(LPDWORD)&fs_h);
 			CloseHandle(h);
 			r.set_fsize(fs_l,fs_h);
 		};
@@ -790,7 +790,7 @@
 		};
 		p++;
 
-		g_lvsend.InsertItem(0,p,(int)fnptr);
+		g_lvsend.InsertItem(0,p,(long)fnptr);
 		g_lvsend.SetItemText(0,1,user);
 		g_lvsend.SetItemText(0,2,"");
 		g_lvsend.SetItemText(0,3,PENDING_UPLOAD_STRING);
@@ -1338,8 +1338,8 @@
 #ifdef _DEFINE_WXUI
 	long val;
 	if (g_xfers_wnd->m_maxsimuldl->GetValue().ToLong(&val) && val != 0) {
-		g_max_simul_dl=(int) val;
-		g_config->WriteInt(CONFIG_recv_maxdl,(int) val);
+		g_max_simul_dl=(long) val;
+		g_config->WriteInt(CONFIG_recv_maxdl,(long) val);
 	}
 #else
 	int r;
--- netkern.cpp.orig	2012-10-04 15:55:07.741232420 -0400
+++ netkern.cpp	2012-10-04 15:55:47.045175716 -0400
@@ -146,7 +146,7 @@
 					char *a=inet_ntoa(in);
 					char str2[512];
 					sprintf(str2,"%s (incoming)",a?a:"?");
-					g_lvnetcons.InsertItem(0,"Authenticating",(int)c);
+					g_lvnetcons.InsertItem(0,"Authenticating",(long)c);
 					g_lvnetcons.SetItemText(0,1,str2);
 					g_lvnetcons.SetItemText(0,2,"100");
 				#endif
@@ -211,13 +211,13 @@
 		#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 			if (netqpos<0) {
 				char buf[1024];
-				sprintf(buf,"%s:%d",text,(int)(unsigned short)port);
-				g_lvnetcons.InsertItem(0,"Connecting",(int)newcon);
+				sprintf(buf,"%s:%d",text,(long)(unsigned short)port);
+				g_lvnetcons.InsertItem(0,"Connecting",(long)newcon);
 				g_lvnetcons.SetItemText(0,1,buf);
 				g_lvnetcons.SetItemText(0,2,"90");
 			}
 			else {
-				g_lvnetcons.SetItemParam(netqpos,(int)newcon);
+				g_lvnetcons.SetItemParam(netqpos,(long)newcon);
 				g_lvnetcons.SetItemText(netqpos,0,"Connecting");
 			};
 
@@ -240,7 +240,7 @@
 		l.add_cap(MLC_SATURATION,!!(g_throttle_flag&16));
 		unsigned long rip=mq->get_con()->get_remote();
 		if (rip) {
-			l.add_cap(MLC_REMOTEIP, (int)rip);
+			l.add_cap(MLC_REMOTEIP, (long)rip);
 		};
 		T_Message msg={0,};
 		msg.data=l.Make();
@@ -355,7 +355,7 @@
 		int s=cc->run(-1,-1);
 		if (s == C_Connection::STATE_DIENOW) {
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-				int a=g_lvnetcons.FindItemByParam((int)cc);
+				int a=g_lvnetcons.FindItemByParam((long)cc);
 				if (a >= 0) {
 					g_lvnetcons.DeleteItem(a);
 				};
@@ -376,7 +376,7 @@
 			#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 				unsigned short port=cc->get_remote_port();
 				int irat=0;
-				int a=g_lvnetcons.FindItemByParam((int)g_new_net.Get(x));
+				int a=g_lvnetcons.FindItemByParam((long)g_new_net.Get(x));
 				if (a >= 0) {
 					char rat[32];
 					g_lvnetcons.GetText(a,2,rat,sizeof(rat));
@@ -428,7 +428,7 @@
 			cc->recv_bytes(b,SYNC_SIZE);
 			if (!cc->PopRandomCrap()) {
 				#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-					int a=g_lvnetcons.FindItemByParam((int)cc);
+					int a=g_lvnetcons.FindItemByParam((long)cc);
 					if (a >= 0) {
 						g_lvnetcons.DeleteItem(a);
 					};
@@ -443,7 +443,7 @@
 			}
 			else if (memcmp(b,g_con_str,SYNC_SIZE)) {
 				#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-					int a=g_lvnetcons.FindItemByParam((int)cc);
+					int a=g_lvnetcons.FindItemByParam((long)cc);
 					if (a >= 0) {
 						g_lvnetcons.DeleteItem(a);
 					};
@@ -501,7 +501,7 @@
 							log_printf(ds_Warning,"Limiter: Host %s as %s cannot connect, because incoming connection limit is reached!",ad,descstr_l);
 						};
 						#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-							int a=g_lvnetcons.FindItemByParam((int)cc);
+							int a=g_lvnetcons.FindItemByParam((long)cc);
 							if (a >= 0) {
 								g_lvnetcons.DeleteItem(a);
 							};
@@ -518,7 +518,7 @@
 
 				if (allowconnection) {
 					#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
-						int a=g_lvnetcons.FindItemByParam((int)cc);
+						int a=g_lvnetcons.FindItemByParam((long)cc);
 						if (a >= 0) {
 							char newconstr[512];
 							struct in_addr in;
@@ -527,7 +527,7 @@
 							if (!ad) ad="?";
 							int port=cc->get_remote_port();
 							if (!port) sprintf(newconstr,"%s (incoming)",ad);
-							else sprintf(newconstr,"%s:%d",ad,(int)(unsigned short)port);
+							else sprintf(newconstr,"%s:%d",ad,(long)(unsigned short)port);
 							g_lvnetcons.SetItemText(a,0,"OK");
 							g_lvnetcons.SetItemText(a,1,newconstr);
 							if (port) g_lvnetcons.SetItemText(a,2,"100");
@@ -575,8 +575,8 @@
 	g_new_net.Add(newcon);
 	#if defined(_WIN32)&&(!defined(_DEFINE_SRV)) || defined(_DEFINE_WXUI)
 		char str2[512];
-		sprintf(str2,"%s:%d",str,(int)port);
-		g_lvnetcons.InsertItem(0,"Connecting",(int)newcon);
+		sprintf(str2,"%s:%d",str,(long)port);
+		g_lvnetcons.InsertItem(0,"Connecting",(long)newcon);
 		g_lvnetcons.SetItemText(0,1,str2);
 		sprintf(str2,"%d",rating);
 		g_lvnetcons.SetItemText(0,2,str2);
@@ -752,7 +752,7 @@
 #ifdef _DEFINE_WXUI
 	long lr;
 	bool b = g_netstat_dlg->m_num_con_up->GetValue().ToLong(&lr);
-	r = (int) lr;
+	r = (long) lr;
 #else
 						BOOL b;
 						r=GetDlgItemInt(hwndDlg,IDC_NUMCONUP,&b,0);
--- blowfish.cpp.orig	2012-10-04 15:55:16.134695994 -0400
+++ blowfish.cpp	2012-10-04 15:55:51.188573363 -0400
@@ -325,9 +325,9 @@
 	0xB74E6132ul, 0xCE77E25Bul, 0x578FDFE3ul, 0x3AC372E6lu
 };
 
-#define GETBYTE(x,y) ((((unsigned int)x)>>(8*(y)))&0xff)
+#define GETBYTE(x,y) ((((unsigned long)x)>>(8*(y)))&0xff)
 #define SETBYTE(x,y,z) ((unsigned char *)(&x))[y]=z
-#define ISALIGN(x,y) ((((unsigned int)x)&(y-1))==0)
+#define ISALIGN(x,y) ((((unsigned long)x)&(y-1))==0)
 #define ISLONGALIGN(x) ISALIGN(x,sizeof(long))
 
 #define E(x,y) s[ y*256 +  GETBYTE(x,3-y) ]
